; reference : https://forum.pjrc.com/index.php?threads/platformio-ini-for-teensy-4-1.72623/

[env:base]
platform = teensy
board = teensy41
framework = arduino
upload_protocol = teensy-cui 
                ; teensy-gui | teensy-cli

; --CPU speed (Hz)--
board_build.f_cpu = 600000000
                  ; 600000000 | 528000000 | 450000000 | 396000000 | 150000000 | 24000000 | 720000000 | 816000000 | 912000000 | 960000000 | 1008000000
                  ; CAUTION! 600000000 is the default option. Options higher than it are considered overclocking, and options higher than 816000000 REQUIRE ADDITIONAL COOLING!
                  ; (from Teensyduino Arduino IDE: .arduino15/packages/teensy/hardware/avr/1.58.0/boards.txt)


build_flags = 
; --USB type--
              ;-D USB_SERIAL 
               ; USB_SERIAL | USB_DUAL_SERIAL | USB_TRIPLE_SERIAL | USB_KEYBOARDONLY | USB_TOUCHSCREEN | USB_HID_TOUCHSCREEN | USB_HID | USB_SERIAL_HID | USB_MIDI | USB_MIDI4 | USB_MIDI16 | USB_MIDI_SERIAL | USB_MIDI4_SERIAL | USB_MIDI16_SERIAL | USB_AUDIO | USB_MIDI_AUDIO_SERIAL | USB_MIDI16_AUDIO_SERIAL | USB_MTPDISK | USB_MTPDISK_SERIAL | USB_RAWHID | USB_FLIGHTSIM | USB_FLIGHTSIM_JOYSTICK
               ; (from PlatformIO: framework-arduinoteensy/cores/teensy4/usb_desc.h and Teensyduino Arduino IDE: .arduino15/packages/teensy/hardware/avr/1.58.0/boards.txt)

; --Code optimization--
              -D TEENSY_OPT_FASTER 
               ; TEENSY_OPT_FASTER | TEENSY_OPT_FAST | TEENSY_OPT_FASTEST | TEENSY_OPT_DEBUG | TEENSY_OPT_SMALLEST_CODE
               ; (see Teensyduino Arduino IDE: .arduino15/packages/teensy/hardware/avr/1.58.0/boards.txt and https://github.com/platformio/platform-teensy/blob/develop/builder/frameworks/arduino.py)

; --Keyboard layout--
              ;-D LAYOUT_US_ENGLISH 
               ; LAYOUT_US_ENGLISH | LAYOUT_CANADIAN_FRENCH | LAYOUT_CANADIAN_MULTILINGUAL | LAYOUT_CZECH | ...(search framework-arduinoteensy/cores/teensy4/keylayouts.h for the rest of the layout options)




; ===== 通常アプリのビルド（任意） =====
[env:production]
extends = base
; 何も指定しなければ src/main.cpp をビルド

; ===== CANテスト専用環境 =====
[env:RoboMaster_test]
extends = base
; test/can_test/ のみ実行
test_filter = RoboMaster_test
; デフォルトでは src/ はビルドに含まれないので二重定義は起きません
; （明示するなら）test_build_src = no

; ===== UDPテスト専用環境 =====
[env:udp_test]
extends = base
test_filter = udp_test
; （明示するなら）test_build_src = no